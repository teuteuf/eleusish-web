openapi: 3.0.1
info:
  title: eleusish-api
  description: API for Eleusish game
  version: 1.0.0
servers:
- url: /api/v1
tags:
- name: Rules
  description: Game rules endpoints
- name: Players
  description: Player endpoints
- name: Specification
  description: The swagger API specification
paths:
  /players:
    post:
      tags:
        - Players
      description: Create new player
      requestBody:
        description: a player
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerBody'
        required: true
      responses:
        201:
          description: Returns created player
          content: {}
  /rules:
    get:
      tags:
      - Rules
      description: Fetch all rules
      parameters:
        - name: authorId
          in: query
          description: The id of the author
          schema:
            type: string
        - name: validated
          in: query
          description: The value of field validated
          schema:
            type: boolean
      responses:
        200:
          description: Returns all rules
          content: {}
    post:
      tags:
      - Rules
      description: Create a new rule
      requestBody:
        description: a rule
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleBody'
        required: true
      responses:
        201:
          description: Returns created rule
          content: {}
  /rules/{id}:
    get:
      tags:
      - Rules
      parameters:
      - name: id
        in: path
        description: The id of the rule to retrieve
        required: true
        schema:
          type: string
      responses:
        200:
          description: Return the rule with the specified id
          content: {}
        404:
          description: Rule not found
          content: {}
    patch:
      tags:
      - Rules
      parameters:
      - name: id
        in: path
        description: The id of the rule to update
        required: true
        schema:
          type: string
      - name: Player-ID
        in: header
        schema:
          type: string
        required: false
      - name: API-Key
        in: header
        schema:
          type: string
        required: false
      requestBody:
        description: fields to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleActivatedUpdateBody'
        required: true
      responses:
        200:
          description: Return the updated rule with the specified id
          content: {}
        404:
          description: Rule not found
          content: {}
        406:
          description: Only 'validated' and 'code' parameters can be updated.
  /spec:
    get:
      tags:
      - Specification
      responses:
        200:
          description: Return the API specification
          content: {}
components:
  schemas:
    RuleBody:
      title: new rule
      required:
      - code
      - authorId
      type: object
      properties:
        authorId:
          type: string
        code:
          type: string
          example: function getInitialCards (remainingCards) { return []; }; function isValid (previousCards, newCard) { return true; };
    PlayerBody:
      title: new player
      required:
      - pseudo
      type: object
      properties:
        pseudo:
          type: string
    RuleActivatedUpdateBody:
      title: rule fields to update
      type: object
      properties:
        validated:
          type: boolean
        code:
          type: string
